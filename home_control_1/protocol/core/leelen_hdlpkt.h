/********************************************************************************
**
** 文件名:     leelen_hdlpkt.h
** 版权所有:   (c) 2015 厦门立林科技有限公司
** 文件描述:   实现对接收数据处理
**
*********************************************************************************
**             修改历史记录
**===============================================================================
**| 日期       | 作者   |  修改记录
**===============================================================================
**| 2015/09/28 | zzh    |  创建该文件
**
*********************************************************************************/

#ifndef LEELEN_HDLPKT_H
#define LEELEN_HDLPKT_H

#ifdef __cplusplus
extern "C" {
#endif



/*
********************************************************************************
* 定义注册结构体
********************************************************************************
*/
typedef struct {
    uint16_t    cmd_type;                    /* 注册的命令字 */
    bool_t      param;                       /* 需要获取参数应答标志 */
    uint8_t    (*handler)(uint8_t*, int, packet_t *);   /* 注册的处理函数 */
} handle_table_t;

/*******************************************************************
** 函数名:     regist_pkt_handler
** 函数描述:   注册钩子处理函数
** 参数:       [in]  cmd_type:   命令字类型
**             [in]  param:      有参应答标志
**             [in]  handler:    数据处理函数
** 返回:       无
** 注意:       0x00业务类型保留用于网络寻址协议
********************************************************************/
void regist_pkt_handler(uint16_t cmd_type, bool_t param, uint8_t (*handler)(uint8_t *, int, packet_t *));

/*******************************************************************
** 函数名:     req_hdlparam
** 函数描述:   在通过命令字注册表中查找处理函数是有参数应答否
** 参数:       [in]  cmd_type: 命令字   
** 返回:       true需要,false不需要
********************************************************************/
bool_t req_hdlparam(uint16_t cmd_type);

/*******************************************************************
** 函数名:     req_hdlpkt
** 函数描述:   请求协议的处理
** 参数:       [in]data:      接收到的数据；
**             [in]data_len： 接收到数据的长度
**             [in]packet：   包参数
** 返回:       如果找到协议则处理成功，否则失败
** 注意:
********************************************************************/
uint8_t req_hdlpkt(uint8_t *data, int data_len, packet_t *packet);

/*******************************************************************
** 函数名:     init_hdlpkt
** 函数描述:   模块初始化函数
** 参数:       无
** 返回:       无
********************************************************************/
void init_hdlpkt(void);


#ifdef __cplusplus
}
#endif

#endif          /* end of LEELEN_HDLPKT_H */



